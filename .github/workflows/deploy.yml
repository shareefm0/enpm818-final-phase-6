name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy-to-eks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.4

      - name: Generate Kubernetes Manifest
        run: |
          make generate-kubernetes-manifests
#          helm repo add opentelemetry-collector https://open-telemetry.github.io/opentelemetry-helm-charts
#          helm repo update
#          helm dependency build ./charts/opentelemetry-demo
#
#          helm template opentelemetry-demo ./charts/opentelemetry-demo \
#            --namespace otel-demo \
#            --set image.repository=ghcr.io/shareefm0/demo \
#            --set image.tag=latest \
#            > opentelemetry-demo.yaml

      - name: Copy Manifest to EC2 Instance
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'opentelemetry-demo.yaml'
          target: '/home/ec2-user/'

#      - name: Apply Manifest Using Kubectl on EC2
#        uses: appleboy/ssh-action@v0.1.3
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ec2-user
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            # Backup existing manifest
#            if [ -f /home/ec2-user/opentelemetry-demo.yaml ]; then
#              cp /home/ec2-user/opentelemetry-demo.yaml /home/ec2-user/opentelemetry-demo-backup.yaml
#            fi
#
#            # Apply new manifest
#            kubectl apply -f /home/ec2-user/opentelemetry-demo.yaml
#
#            # Wait for deployment to complete
#            kubectl rollout status deployment/frontend -n otel-demo --timeout=300s
#
#      - name: Monitor Deployment and Rollback if Necessary
#        uses: appleboy/ssh-action@v0.1.3
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ec2-user
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            # Wait for 5 minutes
#            sleep 300
#
#            # Check for unhealthy pods
#            UNHEALTHY_PODS=$(kubectl get pods -n otel-demo --field-selector=status.phase!=Running --no-headers | wc -l)
#            if [ "$UNHEALTHY_PODS" -ne 0 ]; then
#              echo "Detected issues with deployment. Rolling back..."
#              # Restore previous manifest
#              if [ -f /home/ec2-user/opentelemetry-demo-backup.yaml ]; then
#                kubectl apply -f /home/ec2-user/opentelemetry-demo-backup.yaml
#              else
#                echo "No backup manifest found. Cannot rollback."
#                exit 1
#              fi
#            else
#              echo "Deployment is healthy."
#            fi
