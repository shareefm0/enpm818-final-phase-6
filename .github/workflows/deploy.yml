name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy-to-eks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.4

      - name: Generate Kubernetes Manifest
        run: |
          make generate-kubernetes-manifests

      - name: Copy Manifest to EC2 Instance
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: './kubernetes/opentelemetry-demo.yaml'
          target: '/home/ec2-user/'

      - name: Apply Manifest Using Kubectl on EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Backup existing manifest
            if [ -f /home/ec2-user/kubernetes/opentelemetry-demo.yaml ]; then
              cp /home/ec2-user/kubernetes/opentelemetry-demo.yaml /home/ec2-user/kubernetes/opentelemetry-demo-backup.yaml
            fi

            # Apply new manifest
            KUBECONFIG="/home/ec2-user/.kube/config" kubectl apply --namespace otel-demo -f /home/ec2-user/kubernetes/opentelemetry-demo.yaml

            # Wait for deployment to complete
            KUBECONFIG="/home/ec2-user/.kube/config" kubectl rollout status deployment/opentelemetry-demo-frontend -n otel-demo --timeout=30s

      - name: Monitor Deployment and Rollback if Necessary
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Wait for 5 minutes
            sleep 30

            # Check for unhealthy pods
            UNHEALTHY_PODS=$(kubectl get pods -n otel-demo --field-selector=status.phase!=Running --no-headers 2> /dev/null | wc -l)
            if [ "$UNHEALTHY_PODS" -ne 0 ]; then
              echo "Detected issues with deployment. Rolling back..."
              # Restore previous manifest
              if [ -f /home/ec2-user/kubernetes/opentelemetry-demo-backup.yaml ]; then
                kubectl apply -f /home/ec2-user/kubernetes/opentelemetry-demo-backup.yaml
              else
                echo "No backup manifest found. Cannot rollback."
                exit 1
              fi
            else
              echo "Deployment is healthy."
            fi
